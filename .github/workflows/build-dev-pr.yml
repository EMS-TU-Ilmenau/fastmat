# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: test deployment to stable branch

on:
  pull_request:
    branches: [ "stable" ]
  
  push:
    branches: [ "stable" ]
  
  workflow_dispatch:

env:
  ARTIFACT: wheelhouse/*
  CIBW_SKIP: pp* cp2*

jobs:
  build_linux:
    name: Python ${{ matrix.cibw_python }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest"]
      include:
        - cibw-python: "cp27* cp35*"
          cibw-archs: "x86_64 i686"
          python-version: "3.7"
          pip-requires: "cython>=0.29 numpy==1.16.3 scipy==1.1.0 cibuildwheel==1.9 twine"
        - cibw-python: "cp36* cp37* cp38* cp39*"
          cibw-archs: "x86_64 i686 aarch64"
          python-version: "3.9"
          pip-requires: "cython>=0.29 numpy==1.19.3 scipy==1.5.4 cibuildwheel==1.9 twine"
        - cibw-python: "cp310*"
          cibw-archs: "x86_64 i686 aarch64"
          python-version: "3.10"
          pip-requires: "cython>=0.29 numpy==1.21.6 scipy==1.7.3 cibuildwheel==2.12.1 twine"
        - cibw-python: "cp311*"
          cibw-archs: "x86_64 aarch64"
          python-version: "cp311"
          pip-requires: "cython>=0.29 numpy==1.24.2 scipy==1.10.1 cibuildwheel==2.12.1 twine"

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Build the wheels
      shell: bash
      env:
        CIBW_BUILD: ${{ matrix.cibw-build }}
        CIBW_ARCHS: ${{ matrix.cibw-archs }}
        CIBW_ENVIRONMENT: "FASTMAT_GENERIC=1"
        CIBW_BEFORE_BUILD: "python -m pip install --only-binary :all: ${{ matrix.pip-requires }}"
        FASTMAT_GENERIC: 1
      run: |
        python -m pip install --upgrade pip
        python -m pip install --only-binary :all: ${{ matrix.pip-requires }}
        cibuildwheel --output-dir wheelhouse
      
    - uses: actions/upload-artifact@v3
      with:
        path: ./wheelhouse/*.whl

    - name: Upload the wheels
      shell: bash
      run: |
        ls -l wheelhouse
        if [[ ${{ github.event_name }} == "push" ]]; then
          echo "Uploading to pypi"
        elif [[ ${{ github.event_name }} == "pull_request" ]]; then
          echo "Testing build"
        fi
